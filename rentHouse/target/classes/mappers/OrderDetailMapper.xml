<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.renthouse.dao.OrderDetailMapper" >
  <resultMap id="BaseResultMap" type="org.renthouse.pojo.OrderDetail" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="publish_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="to_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="money" jdbcType="DECIMAL" javaType="java.lang.Long" />
      <arg column="pay_month" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="leave_month" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pay_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, publish_id, user_id, to_user_id, create_time, update_time, end_time, 
    money, pay_month, leave_month, pay_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.renthouse.pojo.OrderDetail" >
    insert into order_detail (id, order_id, publish_id, 
      user_id, to_user_id, create_time, 
      update_time, end_time, money, 
      pay_month, leave_month, pay_type
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{publishId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{money,jdbcType=DECIMAL}, 
      #{payMonth,jdbcType=INTEGER}, #{leaveMonth,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.renthouse.pojo.OrderDetail" >
    insert into order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="publishId != null" >
        publish_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="payMonth != null" >
        pay_month,
      </if>
      <if test="leaveMonth != null" >
        leave_month,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null" >
        #{publishId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="payMonth != null" >
        #{payMonth,jdbcType=INTEGER},
      </if>
      <if test="leaveMonth != null" >
        #{leaveMonth,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.renthouse.pojo.OrderDetail" >
    update order_detail
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null" >
        publish_id = #{publishId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="payMonth != null" >
        pay_month = #{payMonth,jdbcType=INTEGER},
      </if>
      <if test="leaveMonth != null" >
        leave_month = #{leaveMonth,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.renthouse.pojo.OrderDetail" >
    update order_detail
    set order_id = #{orderId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DECIMAL},
      pay_month = #{payMonth,jdbcType=INTEGER},
      leave_month = #{leaveMonth,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>