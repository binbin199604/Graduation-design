<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.renthouse.dao.OffLineAppointMapper" >
  <resultMap id="BaseResultMap" type="org.renthouse.pojo.OffLineAppoint" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="owner_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="renter_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="appoint_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="person_number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, owner_id, renter_id, create_time, update_time, appoint_time, time, person_number, 
    phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from off_line_appoint
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from off_line_appoint
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.renthouse.pojo.OffLineAppoint" >
    insert into off_line_appoint (id, owner_id, renter_id, 
      create_time, update_time, appoint_time, 
      time, person_number, phone
      )
    values (#{id,jdbcType=INTEGER}, #{ownerId,jdbcType=INTEGER}, #{renterId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{appointTime,jdbcType=TIMESTAMP}, 
      #{time,jdbcType=VARCHAR}, #{personNumber,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.renthouse.pojo.OffLineAppoint" >
    insert into off_line_appoint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="renterId != null" >
        renter_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="appointTime != null" >
        appoint_time,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="personNumber != null" >
        person_number,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="renterId != null" >
        #{renterId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointTime != null" >
        #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="personNumber != null" >
        #{personNumber,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.renthouse.pojo.OffLineAppoint" >
    update off_line_appoint
    <set >
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="renterId != null" >
        renter_id = #{renterId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointTime != null" >
        appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="personNumber != null" >
        person_number = #{personNumber,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.renthouse.pojo.OffLineAppoint" >
    update off_line_appoint
    set owner_id = #{ownerId,jdbcType=INTEGER},
      renter_id = #{renterId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=VARCHAR},
      person_number = #{personNumber,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>